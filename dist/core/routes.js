"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const controllers_1 = require("../controllers");
const body_parser_1 = __importDefault(require("body-parser"));
const middlewares_1 = require("../middlewares");
const validations_1 = require("../utils/validations");
const multer_1 = __importDefault(require("./multer"));
const createRoutes = (app, io) => {
    const UserController = new controllers_1.UserCtrl(io);
    const DialogController = new controllers_1.DialogCtrl(io);
    const MessageController = new controllers_1.MessageCtrl(io);
    const UploadFileController = new controllers_1.UploadCtrl();
    const PostController = new controllers_1.PostCtrl();
    app.use(body_parser_1.default.json());
    app.use(middlewares_1.checkAuth);
    app.use(middlewares_1.updateLastSeen);
    app.get("/users", UserController.getUsers);
    app.get("/user/me", UserController.getMe);
    app.post("/user/registration/verify", UserController.verify);
    app.post("/user/registration", validations_1.registerValidation, UserController.create);
    app.post("/user/login", validations_1.loginValidation, UserController.login);
    app.get("/user/status/:id", UserController.getUserStatus);
    app.get("/user/profile/:id", UserController.getProfile);
    app.post("/user/status", UserController.updateStatus);
    app.post("/user/profile", UserController.updateProfile);
    app.post("/user/avatar", multer_1.default.single("file"), UserController.updateAvatar);
    app.get("/user/find", UserController.findUsers);
    app.get("/user/:id", UserController.show);
    app.delete("/user/:id", UserController.delete);
    app.get("/dialogs/:id", DialogController.index);
    app.delete("/dialogs/:id", DialogController.delete);
    app.post("/dialogs", DialogController.create);
    app.get("/dialogs/find/:id", DialogController.findDialog);
    app.get("/messages", MessageController.index);
    app.post("/messages", MessageController.create);
    app.delete("/messages", MessageController.delete);
    app.get("/posts/:id", PostController.index);
    app.post("/posts", PostController.create);
    app.post("/post/likes", PostController.updateLikesCount);
    app.delete("/posts", PostController.delete);
    app.post("/files", multer_1.default.single("file"), UploadFileController.create);
    app.delete("/files", UploadFileController.delete);
};
exports.default = createRoutes;
